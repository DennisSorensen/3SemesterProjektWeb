//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.CalendarServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Calendar", Namespace="http://schemas.datacontract.org/2004/07/WCF.ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Calendar : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalendarServiceReference.ICalendarService")]
    public interface ICalendarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Create", ReplyAction="http://tempuri.org/ICalendarService/CreateResponse")]
        void Create(Web.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Create", ReplyAction="http://tempuri.org/ICalendarService/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(Web.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Get", ReplyAction="http://tempuri.org/ICalendarService/GetResponse")]
        Web.CalendarServiceReference.Calendar Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Get", ReplyAction="http://tempuri.org/ICalendarService/GetResponse")]
        System.Threading.Tasks.Task<Web.CalendarServiceReference.Calendar> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Edit", ReplyAction="http://tempuri.org/ICalendarService/EditResponse")]
        void Edit(Web.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Edit", ReplyAction="http://tempuri.org/ICalendarService/EditResponse")]
        System.Threading.Tasks.Task EditAsync(Web.CalendarServiceReference.Calendar calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Delete", ReplyAction="http://tempuri.org/ICalendarService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/Delete", ReplyAction="http://tempuri.org/ICalendarService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAll", ReplyAction="http://tempuri.org/ICalendarService/GetAllResponse")]
        Web.CalendarServiceReference.Calendar[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetAll", ReplyAction="http://tempuri.org/ICalendarService/GetAllResponse")]
        System.Threading.Tasks.Task<Web.CalendarServiceReference.Calendar[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalendarServiceChannel : Web.CalendarServiceReference.ICalendarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalendarServiceClient : System.ServiceModel.ClientBase<Web.CalendarServiceReference.ICalendarService>, Web.CalendarServiceReference.ICalendarService {
        
        public CalendarServiceClient() {
        }
        
        public CalendarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalendarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Create(Web.CalendarServiceReference.Calendar calendar) {
            base.Channel.Create(calendar);
        }
        
        public System.Threading.Tasks.Task CreateAsync(Web.CalendarServiceReference.Calendar calendar) {
            return base.Channel.CreateAsync(calendar);
        }
        
        public Web.CalendarServiceReference.Calendar Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<Web.CalendarServiceReference.Calendar> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public void Edit(Web.CalendarServiceReference.Calendar calendar) {
            base.Channel.Edit(calendar);
        }
        
        public System.Threading.Tasks.Task EditAsync(Web.CalendarServiceReference.Calendar calendar) {
            return base.Channel.EditAsync(calendar);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public Web.CalendarServiceReference.Calendar[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Web.CalendarServiceReference.Calendar[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
